<?php return array (
  'preserve_keys' => false,
  'update_object' => true,
  'unique_key' => 'name',
  'namespace' => 'summary',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"summary-1.0.3-pl\\/modSnippet\\/bc51fc5cf26a39f0b9935aedfe4a577c\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"summary"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '26f277999d563ab8e0ba9a9f77b81bef',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => 'bc51fc5cf26a39f0b9935aedfe4a577c',
  'native_key' => NULL,
  'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"summary","description":"Truncates the HTML string to the specified length","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\r\\n * summary\\r\\n * Truncates the HTML string to the specified length\\r\\n *\\r\\n * Copyright 2013 by Agel_Nash <Agel_Nash@xaker.ru>\\r\\n *\\r\\n * @category extender\\r\\n * @license GNU General Public License (GPL), http:\\/\\/www.gnu.org\\/copyleft\\/gpl.html\\r\\n * @author Agel_Nash <Agel_Nash@xaker.ru>\\r\\n * @see http:\\/\\/blog.agel-nash.ru\\/addon\\/summary.html\\r\\n * @date 31.07.2013\\r\\n * @version 1.0.2\\r\\n *\\r\\n * @var modX $modx\\r\\n * @var array $scriptProperties\\r\\n * @var string $input\\r\\n*\\/\\r\\nif(empty($modx) || !($modx instanceof modX)) return \'\';\\r\\n\\r\\nif(isset($text) && !empty($text)){\\r\\n$input=$text;\\r\\n}\\r\\n\\r\\nif (is_scalar($input)){\\r\\nif(empty($input)){\\r\\n$modx->log(modX::LOG_LEVEL_DEBUG,\'[summary] text is empty, aborting.\');\\r\\nreturn \'\';\\r\\n}\\r\\n}else{\\r\\n$modx->log(modX::LOG_LEVEL_DEBUG,\'[summary] text is not scalar, aborting.\');\\r\\nreturn \'\';\\r\\n}\\r\\n\\r\\n$modelPath = $modx->getOption(\'summary.core_path\',null,$modx->getOption(\'core_path\').\'components\\/summary\\/\').\'model\\/\';\\r\\n\\r\\nif(file_exists($modelPath.\'summary\\/summary.class.php\') && !class_exists(\'SummaryText\',false)){\\r\\nrequire_once($modelPath.\'summary\\/summary.class.php\');\\r\\n}\\r\\n\\r\\n$out=\'\';\\r\\nif(class_exists(\'SummaryText\',false)){\\r\\n    $action = array();\\r\\n    if(isset($options)){\\r\\n        $options=explode(\\"&\\",$options);\\r\\n        foreach($options as $item){\\r\\n            list($name,$val)=explode(\\"=\\",$item);\\r\\n            switch($name){\\r\\n                case \'tags\': $tags=$val; break;\\r\\n                case \'len\': $len=$val; break;\\r\\n                case \'noparser\': $noparser=$val; break;\\r\\n                case \'dotted\': $dot=$val; break;\\r\\n                case \'cut\': $cut=$val; break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    if(empty($tags)){\\r\\n        $action[]=\'notags\';\\r\\n    }\\r\\n\\r\\n    if(!empty($noparser)){\\r\\n        $action[]=\'noparser\';\\r\\n    }\\r\\n\\r\\n    if(!empty($len)){\\r\\n        $action[]=\'len\'.((int)$len>0 ? \':\'.(int)$len : \'\');\\r\\n    }\\r\\n    \\r\\n    $action=implode(\\",\\",$action);\\r\\n\\r\\n    if(!isset($dot)){\\r\\n       $dot = 0;\\r\\n    }\\r\\n    $summary = new SummaryText($input,$action);\\r\\n    if(!empty($cut)){\\r\\n        $summary->setCut($cut);   \\r\\n    }\\r\\n    $out = $summary->run($dot);\\r\\n\\r\\n    unset($summary,$input,$action);\\r\\n\\r\\n}else{\\r\\n    $modx->log(modX::LOG_LEVEL_DEBUG,\'[summary] not found summary class\');\\r\\n    $out = $text;\\r\\n}\\r\\n\\r\\nreturn $out;","locked":0,"properties":"a:6:{s:4:\\"text\\";a:7:{s:4:\\"name\\";s:4:\\"text\\";s:4:\\"desc\\";s:12:\\"summary.text\\";s:4:\\"type\\";s:8:\\"textarea\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"summary:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"len\\";a:7:{s:4:\\"name\\";s:3:\\"len\\";s:4:\\"desc\\";s:11:\\"summary.len\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"summary:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"noparser\\";a:7:{s:4:\\"name\\";s:8:\\"noparser\\";s:4:\\"desc\\";s:16:\\"summary.noparser\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:3:\\"YES\\";s:5:\\"value\\";s:1:\\"1\\";}i:1;a:2:{s:4:\\"text\\";s:2:\\"NO\\";s:5:\\"value\\";s:1:\\"0\\";}}s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:18:\\"summary:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"tags\\";a:7:{s:4:\\"name\\";s:4:\\"tags\\";s:4:\\"desc\\";s:12:\\"summary.tags\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:3:\\"YES\\";s:5:\\"value\\";s:1:\\"1\\";}i:1;a:2:{s:4:\\"text\\";s:2:\\"NO\\";s:5:\\"value\\";s:1:\\"0\\";}}s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:18:\\"summary:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"dotted\\";a:7:{s:4:\\"name\\";s:6:\\"dotted\\";s:4:\\"desc\\";s:14:\\"summary.dotted\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:3:{i:0;a:2:{s:4:\\"text\\";s:3:\\"Yes\\";s:5:\\"value\\";s:1:\\"1\\";}i:1;a:2:{s:4:\\"text\\";s:10:\\"Cut ignore\\";s:5:\\"value\\";s:1:\\"2\\";}i:2;a:2:{s:4:\\"text\\";s:2:\\"No\\";s:5:\\"value\\";s:1:\\"0\\";}}s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:18:\\"summary:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"cut\\";a:7:{s:4:\\"name\\";s:3:\\"cut\\";s:4:\\"desc\\";s:11:\\"summary.cut\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"<cut\\/>\\";s:7:\\"lexicon\\";s:18:\\"summary:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\r\\n * summary\\r\\n * Truncates the HTML string to the specified length\\r\\n *\\r\\n * Copyright 2013 by Agel_Nash <Agel_Nash@xaker.ru>\\r\\n *\\r\\n * @category extender\\r\\n * @license GNU General Public License (GPL), http:\\/\\/www.gnu.org\\/copyleft\\/gpl.html\\r\\n * @author Agel_Nash <Agel_Nash@xaker.ru>\\r\\n * @see http:\\/\\/blog.agel-nash.ru\\/addon\\/summary.html\\r\\n * @date 31.07.2013\\r\\n * @version 1.0.2\\r\\n *\\r\\n * @var modX $modx\\r\\n * @var array $scriptProperties\\r\\n * @var string $input\\r\\n*\\/\\r\\nif(empty($modx) || !($modx instanceof modX)) return \'\';\\r\\n\\r\\nif(isset($text) && !empty($text)){\\r\\n$input=$text;\\r\\n}\\r\\n\\r\\nif (is_scalar($input)){\\r\\nif(empty($input)){\\r\\n$modx->log(modX::LOG_LEVEL_DEBUG,\'[summary] text is empty, aborting.\');\\r\\nreturn \'\';\\r\\n}\\r\\n}else{\\r\\n$modx->log(modX::LOG_LEVEL_DEBUG,\'[summary] text is not scalar, aborting.\');\\r\\nreturn \'\';\\r\\n}\\r\\n\\r\\n$modelPath = $modx->getOption(\'summary.core_path\',null,$modx->getOption(\'core_path\').\'components\\/summary\\/\').\'model\\/\';\\r\\n\\r\\nif(file_exists($modelPath.\'summary\\/summary.class.php\') && !class_exists(\'SummaryText\',false)){\\r\\nrequire_once($modelPath.\'summary\\/summary.class.php\');\\r\\n}\\r\\n\\r\\n$out=\'\';\\r\\nif(class_exists(\'SummaryText\',false)){\\r\\n    $action = array();\\r\\n    if(isset($options)){\\r\\n        $options=explode(\\"&\\",$options);\\r\\n        foreach($options as $item){\\r\\n            list($name,$val)=explode(\\"=\\",$item);\\r\\n            switch($name){\\r\\n                case \'tags\': $tags=$val; break;\\r\\n                case \'len\': $len=$val; break;\\r\\n                case \'noparser\': $noparser=$val; break;\\r\\n                case \'dotted\': $dot=$val; break;\\r\\n                case \'cut\': $cut=$val; break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    if(empty($tags)){\\r\\n        $action[]=\'notags\';\\r\\n    }\\r\\n\\r\\n    if(!empty($noparser)){\\r\\n        $action[]=\'noparser\';\\r\\n    }\\r\\n\\r\\n    if(!empty($len)){\\r\\n        $action[]=\'len\'.((int)$len>0 ? \':\'.(int)$len : \'\');\\r\\n    }\\r\\n    \\r\\n    $action=implode(\\",\\",$action);\\r\\n\\r\\n    if(!isset($dot)){\\r\\n       $dot = 0;\\r\\n    }\\r\\n    $summary = new SummaryText($input,$action);\\r\\n    if(!empty($cut)){\\r\\n        $summary->setCut($cut);   \\r\\n    }\\r\\n    $out = $summary->run($dot);\\r\\n\\r\\n    unset($summary,$input,$action);\\r\\n\\r\\n}else{\\r\\n    $modx->log(modX::LOG_LEVEL_DEBUG,\'[summary] not found summary class\');\\r\\n    $out = $text;\\r\\n}\\r\\n\\r\\nreturn $out;"}',
);